{"version":3,"sources":["vectors/gmail.svg","vectors/linkedin.svg","vectors/github.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Intro","className","href","Footer","src","github","alt","linkedin","gmail","App","useLayoutEffect","window","VANTA","FOG","el","minHeight","minWidth","highlightColor","midtoneColor","baseColor","blurFactor","zoom","speed","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,+PCgC3C,SAASC,IACP,OACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,wCAAd,qDACA,uBAAGA,UAAU,QAAb,sIAAuJ,uBAAGC,KAAK,wBAAR,cACvJ,uBAAGD,UAAU,QAAb,sNACA,uBAAGA,UAAU,QAAb,4CAA6D,uBAAGC,KAAK,+BAAR,cAA7D,YAA0H,uBAAGA,KAAK,mCAAR,eAC1H,6BAkCN,SAASC,IACP,OACE,iCACE,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACf,uBAAGA,UAAU,aAAb,6CAGA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cACb,uBAAGC,KAAK,oCAAoCD,UAAU,oBACpD,yBAAKG,IAAKC,IAAQJ,UAAU,SAASK,IAAI,YAE3C,uBAAGJ,KAAK,yCAAyCD,UAAU,oBACzD,yBAAKG,IAAKG,IAAUN,UAAU,SAASK,IAAI,cAE7C,uBAAGJ,KAAK,kCAAkCD,UAAU,oBAClD,yBAAKG,IAAKI,IAAOP,UAAU,SAASK,IAAI,gBAUzCG,MAhGf,WAcE,OAbAC,2BAAgB,WACbC,OAAeC,MAAMC,IAAI,CACxBC,GAAI,QACJC,UAAW,IACXC,SAAU,IACVC,eAAgB,SAChBC,aAAc,SACdC,UAAW,SACXC,WAAY,GACZC,KAAM,EACNC,MAAO,QAIT,yBAAKC,GAAG,OACN,6BAAStB,UAAU,sBACjB,yBAAKA,UAAU,aACb,kBAACD,EAAD,QAGJ,kBAACG,EAAD,QCfcqB,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.660e7c32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.3f8923b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.7b020cb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1c6ad8c5.svg\";","import React, { useLayoutEffect } from 'react';\r\nimport gmail from './vectors/gmail.svg';\r\nimport linkedin from './vectors/linkedin.svg';\r\nimport github from './vectors/github.svg';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  useLayoutEffect(() => {\r\n    (window as any).VANTA.FOG({\r\n      el: \"#body\",\r\n      minHeight: 200.00,\r\n      minWidth: 200.00,\r\n      highlightColor: 0xff4060,\r\n      midtoneColor: 0xff9040,\r\n      baseColor: 0xffbada,\r\n      blurFactor: 0.3,\r\n      zoom: 2,\r\n      speed: 0.6\r\n    })\r\n  })\r\n  return (\r\n    <div id=\"app\">\r\n      <section className=\"hero is-fullheight\">\r\n        <div className=\"hero-body\">\r\n          <Intro />\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Intro() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title is-1 is-size-3-touch is-spaced\">Hi, I'm Adrian! I build world-class Android apps.</h1>\r\n      <p className=\"mb-4\">I am a Stockholm based developer currently working freelance. Previously I was working as a Software Engineer and Platform Lead at <a href=\"https://bontouch.com\">Bontouch.</a></p>\r\n      <p className=\"mb-4\">I have worked with a wide array of disciplines including mobile development, technical leadership, web development, audio analysis, and even co-founding a company creating interactive mixed reality experiences.</p>\r\n      <p className=\"mb-4\">If this sounds interesting, feel free to <a href=\"/files/Adrian_Blanco_CV.pdf\">view my CV</a> or just <a href=\"mailto:adrianblancode@gmail.com\">say hello.</a></p>\r\n      <p></p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction Experience() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h4 className=\"title is-4\">Recent Projects</h4>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-6-tablet\">\r\n          <img src=\"/images/coop-showcase.png\" alt=\"Coop Showcase\" />\r\n          <h3 className=\"subtitle is-5\">Coop</h3>\r\n        </div>\r\n        <div className=\"column is-6-tablet\">\r\n          <img src=\"/images/goahead-showcase.png\" alt=\"GoAhead Showcase\" />\r\n          <h3>GoAhead</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-6-tablet\">\r\n          <img src=\"/images/sj-showcase.png\" alt=\"SJ Showcase\" />\r\n          <h3>Swedish Railways (SJ)</h3>\r\n        </div>\r\n        <div className=\"column is-6-tablet\">\r\n          <img src=\"/images/whitelines-showcase.jpg\" alt=\"Whitelines Showcase\" />\r\n          <h3>Whitelines</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <section>\r\n      <div className=\"container pb-4\">\r\n        <div className=\"level\">\r\n          <div className=\"level-left\">\r\n            <div className=\"level-item\">\r\n            <p className=\"is-size-7\">Made with ❤️ by Adrian Blanco</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"level-right\">\r\n            <div className=\"level-item\">\r\n              <a href=\"https://github.com/adrianblancode\" className=\"social-container\">\r\n                <img src={github} className=\"social\" alt=\"GitHub\" />\r\n              </a>\r\n              <a href=\"https://linkedin.com/in/adrianblancode\" className=\"social-container\">\r\n                <img src={linkedin} className=\"social\" alt=\"LinkedIn\" />\r\n                </a>\r\n              <a href=\"mailto:adrianblancode@gmail.com\" className=\"social-container\">\r\n                <img src={gmail} className=\"social\" alt=\"Email\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.scss';\r\nimport './text.scss';\r\nimport './fonts.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}