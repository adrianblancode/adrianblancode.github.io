{"version":3,"sources":["images/paypal-logo.png","images/coop-showcase.png","images/sj-logo.png","images/goahead-showcase.png","images/whitelines-showcase.jpg","images/tekniska-logo.jpg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Hero","onChevronClicked","className","Vanta","Intro","Footer","useState","vantaEffect","setVantaEffect","useEffect","FOG","el","THREE","minHeight","minWidth","highlightColor","midtoneColor","lowlightColor","baseColor","blurFactor","zoom","scale","scaleMobile","speed","e","console","error","destroy","id","role","aria-label","href","Chevron","clickListener","onClick","xmlns","width","height","viewBox","fill","d","Experience","forwardRef","props","ref","projectItems","imgSrc","paypal","imgAltText","title","descriptions","coop","sj","goahead","whitelines","tekniska","map","item","i","ProjectItem","key","target","rel","src","alt","desc","dangerouslySetInnerHTML","__html","App","experienceRef","createRef","window","scrollTo","current","offsetTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.09c4e7c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paypal-logo.eeba6a30.png\";","module.exports = __webpack_public_path__ + \"static/media/coop-showcase.b2de768e.png\";","module.exports = __webpack_public_path__ + \"static/media/sj-logo.878c46ad.png\";","module.exports = __webpack_public_path__ + \"static/media/goahead-showcase.474a0ba5.png\";","module.exports = __webpack_public_path__ + \"static/media/whitelines-showcase.1363af0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tekniska-logo.7afa7de0.jpg\";","import React, { useState, useEffect, forwardRef, RefObject, createRef } from 'react'\nimport * as THREE from 'three'\nimport FOG from 'vanta/dist/vanta.fog.min'\nimport paypal from './images/paypal-logo.png'\nimport coop from './images/coop-showcase.png'\nimport sj from './images/sj-logo.png'\nimport goahead from './images/goahead-showcase.png'\nimport whitelines from './images/whitelines-showcase.jpg'\nimport tekniska from './images/tekniska-logo.jpg'\nimport './App.scss'\n\nconst scrollToRef = (ref: RefObject<any>) => window.scrollTo(0, ref.current.offsetTop)   \n\nfunction App() {\n\n  const experienceRef = createRef<HTMLDivElement>()\n  const scrollToExperience: () => void = () => scrollToRef(experienceRef)\n\n  return (\n    <div id=\"app\">\n      <Hero onChevronClicked={scrollToExperience}/>\n      <Experience ref={experienceRef} />\n    </div>\n  )\n}\n\nfunction Hero({ onChevronClicked }: { onChevronClicked: () => void }) {\n\n  return (\n    <section className=\"hero is-fullheight\">\n      <div className=\"hero-body\">\n        <Vanta />\n        <div className=\"hero-bg-grid\"/>\n        <div className=\"hero-bg-gradient\"/>\n        <Intro />\n      </div>\n      <div className=\"hero-foot\">\n        <Footer onChevronClicked={onChevronClicked}/>\n      </div>\n    </section>\n  )\n}\n\nfunction Vanta() {\n\n  const [vantaEffect, setVantaEffect] = useState<any>(null)\n  useEffect(() => {\n    if (!vantaEffect) {\n      try {\n        setVantaEffect(FOG({\n          el: \"#vanta-container\",\n          THREE: THREE,\n          minHeight: 200.00,\n          minWidth: 200.00,\n          highlightColor: 0xff2060,\n          midtoneColor: 0xde3163,\n          lowlightColor: 0x772088,\n          baseColor: 0x30004a,\n          blurFactor: 0.4,\n          zoom: 0.55,\n          scale: 16,\n          scaleMobile: 16,\n          speed: -0.4\n        }))\n      } catch (e) {\n        console.error(\"Failed to create vanta effect: \", e)\n      }\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy()\n    }\n  }, [vantaEffect])\n\n  return (\n    <div id=\"vanta-container\"/>\n  )\n}\n\nfunction Intro() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title is-3 is-size-4-touch fadein-1 mb-1\">Hey, I'm Adrian Blanco.</h1>\n      <h1 className=\"title is-3 is-size-4-touch fadein-1\">I convert coffee to code.</h1>\n      <p className=\"mb-4 fadein-2\">I'm a Software Engineer from <span role=\"img\" aria-label=\"Sweden\">ðŸ‡¸ðŸ‡ª</span>.</p>\n      <p className=\"mb-4 fadein-3\">For the past six years I've worked on everything related to Android, from apps to operating systems.</p>\n      <p></p>\n    </div>\n  )\n}\n\nfunction Footer({ onChevronClicked }: { onChevronClicked: () => void }) {\n  return (\n      <div className=\"container is-fluid mb-5 fadein-5\">\n        <div className=\"level\">\n          <div className=\"level-left\" />\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <p className=\"is-size-7\">\n                <a href=\"/files/Adrian_Blanco_CV.pdf\">CV</a>\n              </p>\n            </div>\n            <div className=\"level-item\">\n              <p className=\"is-size-7\">\n                <a href=\"https://github.com/adrianblancode\">GitHub</a>\n              </p>\n            </div>\n            <div className=\"level-item\">\n              <p className=\"is-size-7\">\n                <a href=\"https://linkedin.com/in/adrianblancode\">LinkedIn</a>\n              </p>\n            </div>\n            <div className=\"level-item\">\n              <p className=\"is-size-7\">\n                <a href=\"mailto:adrianblancode@gmail.com\">Email</a>\n              </p>\n            </div>\n          </div>\n        </div>\n        <Chevron clickListener={onChevronClicked} />\n      </div>\n  )\n}\n\nfunction Chevron({ clickListener }: { clickListener: () => void }) {\n  return (\n    <div className=\"is-hidden-touch chevron-down fadein-5\">\n      <button onClick={clickListener}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path fill=\"white\" d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\"/>\n        </svg>\n      </button>\n    </div>\n  )\n}\n\ninterface ProjectItemProps{\n  imgSrc: string,\n  imgAltText: string,\n  title: string,\n  descriptions: string[]\n}\n\nconst Experience = forwardRef<HTMLDivElement>((props, ref) => {\n\n  const projectItems: ProjectItemProps[] = [\n    {\n      imgSrc : paypal,\n      imgAltText : \"PayPal logo\",\n      title : \"PayPal\",\n      descriptions : [\n        \"Zettle Terminal is PayPal's leading payment terminal.\",\n        \"I worked on building the operating system for the Zettle Terminal hardware, based on AOSP.\",\n        \"I developed new payment features for the Zettle Android SDK serving millions of users, such as accessibility payment flows, tipping for global markets and Venmo payments for the US market.\",\n        // \"Developed Venmo payments in Zettle Android for the US market\"\n        \"<a href=\\\"https://www.youtube.com/watch?v=00LU2zrlL5U\\\">Zettle Terminal at YouTube</a>\"\n      ]\n    },\n    {\n      imgSrc : coop,\n      imgAltText : \"Coop Showcase\",\n      title : \"Coop\",\n      descriptions : [\n        \"Coop is one of the largest grocery store chains in the Nordics, with a strong focus on online shopping.\",\n        \"I led the development of the new Coop app for Android as platform lead, building one of the largest ecommerce apps in the Nordics from the ground up and serving hundreds of thousands of users.\",\n        \"As platform lead I ensured high technical quality through technical leadership, architecture, software engineering best practices, code reviews, among others.\",\n        \"<a href=\\\"https://play.google.com/store/apps/details?id=se.nansen.coop\\\">Coop at Google Play</a>\"\n      ]\n    },\n    {\n      imgSrc : sj,\n      imgAltText : \"SJ logo\",\n      title : \"Swedish Railways (SJ)\",\n      descriptions : [\n        \"SJ is the largest train operator in Sweden.\",\n        \"I worked with developing the internal apps for SJ that are used for scanning tickets and managing trains all across Sweden.\",\n        \"<a href=\\\"https://www.bbc.com/news/av/technology-41178142\\\">SJ ticket scanning app featured on BBC</a>\"\n      ]\n    },\n    {\n      imgSrc : goahead,\n      imgAltText : \"GoAhead Showcase\",\n      title : \"GoAhead\",\n      descriptions : [\n        \"GoAhead is one of the largest bus operators in the UK.\",\n        \"I worked with GoAhead as a developer for the ground up rewrite of their bus apps handling passenger travel and tickets for buses all across the UK.\",\n        \"During the final months of the project I relocated to the London office to lead the app experience for the Android platform.\"\n      ]\n    },\n    {\n      imgSrc : whitelines,\n      imgAltText : \"Whitelines Showcase\",\n      title : \"Whitelines\",\n      descriptions : [\n        \"Whitelines Link is an app to scan and organize your notes.\",\n        \"For the Android version, I developed a new major release including a redesign of the app with a new design language and new scanning features.\",\n        \"<a href=\\\"https://play.google.com/store/apps/details?id=se.whitelines.link\\\">Whitelines Link at Google Play</a>\"\n      ]\n    },\n    {\n      imgSrc : tekniska,\n      imgAltText : \"Tekniska Museet logo\",\n      title : \"Swedish National Museum of Science and Technology (Tekniska Museet)\",\n      descriptions : [\n        \"I developed interactive mixed reality experiences using Kinect and Unity, which were featured in an exhibit about the history of video games.\",\n        \"<a href=\\\"https://www.tekniskamuseet.se/en/discover/exhibitions/play-beyond-play/\\\">Play Beyond Play at Tekniska Museet</a>\"\n      ]\n    },\n  ]\n\n  return (\n    <div ref={ref}>\n      <section className=\"section experience\">\n        <div className=\"container\">\n          <h2 className=\"title is-5\">My work</h2>\n\n          {\n            projectItems.map((item, i) => {\n              return (\n                  <ProjectItem {...item} key={\"p\" + i}/>\n              )\n            })\n          }\n\n        </div>\n      </section>\n    </div>\n  )\n})\n\nfunction ProjectItem(props: ProjectItemProps) {\n\n  return (\n    <div className=\"columns mb-6 is-4 is-variable\">\n      <div className=\"projectitem column is-4-tablet mt-1\">\n        <a href={props.imgSrc} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={props.imgSrc} className=\"portfolio-image\" alt={props.imgAltText} />\n        </a>\n      </div>\n      <div className=\"projectitem column is-8-tablet \">\n        <h3 className=\"subtitle is-6 mb-2\">{props.title}</h3>\n\n        {\n          props.descriptions.map((desc, i) => {\n            return (\n              <p className=\"is-size-7\" key={i} dangerouslySetInnerHTML={{__html: desc}} />\n            )\n          })\n        }\n\n    </div>\n  </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './text.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}